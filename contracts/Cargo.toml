[package]
name = "psp22_example"
version = "0.1.0"
authors = ["Cardinals Cryptography"]
edition = "2021"

[dependencies]
# Import of all ink! crates
ink_primitives = { version = "~3.4.0", default-features = false }
ink_metadata = { version = "~3.4.0", default-features = false, features = ["derive"], optional = true }
ink_env = { version = "~3.4.0", default-features = false }
ink_storage = { version = "~3.4.0", default-features = false }
ink_lang = { version = "~3.4.0", default-features = false }
ink_prelude = { version = "~3.4.0", default-features = false }
ink_engine = { version = "~3.4.0", default-features = false, optional = true }

scale = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }
scale-info = { version = "2", default-features = false, features = ["derive"], optional = true }

# Brush dependency
openbrush = { git = "https://github.com/Supercolony-net/openbrush-contracts", rev = "v2.3.0", default-features = false, features = ["psp22", "ownable"] }

[features]
default = ["std"]
std = [
  "ink_primitives/std",
  "ink_metadata",
  "ink_metadata/std",
  "ink_env/std",
  "ink_storage/std",
  "ink_lang/std",
  "scale/std",
  "scale-info",
  "scale-info/std",

  # Brush dependency
  "openbrush/std",
]
ink-as-dependency = []

[lib]
name = "psp22_example"
path = "lib.rs"
crate-type = [
  # Used for normal contract Wasm blobs.
  "cdylib",
  # Used for ABI generation and for unit test.
  "rlib",
]
